/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/no-unsafe-call */
import { Delete, Edit } from "@mui/icons-material";
import { IconButton } from "@mui/material";
import Head from "next/head";
import { useEffect, useState } from "react";
import { v4 as uuidv4 } from "uuid";
interface thingprops {
  text: string;
  amount: number;
  type: "expense" | "income";
  id: string;
}
export default function Home() {
  const [allmain, setAllmain] = useState<Array<thingprops>>([]);
  const [totalexpense, setTotalexpense] = useState(0);
  const [totalincome, setTotalincome] = useState(0);
  const [main, setMain] = useState<thingprops>({
    text: "",
    amount: 0,
    type: "expense",
    id: "",
  });
  useEffect(() => {
    setTotalexpense(
      allmain
        .filter((x) => x.type === "expense")
        .reduce((prev, current) => current.amount + prev, 0),
    );
    setTotalincome(
      allmain.reduce(
        (prev, current) =>
          current.type === "income"
            ? prev + current.amount
            : prev - current.amount,
        0,
      ),
    );
  }, [allmain]);
  const HandleClick = () => {
    setMain((prev) => ({ ...prev, id: uuidv4() }));
    console.log(main);
    if (main.amount !== 0 || main.text !== "") {
      setAllmain((prevmain) => [...prevmain, main]);
    }
    setMain({ text: "", amount: 0, type: "expense", id: "" });
  };
  const HandleDelete = (id: string) => {
    setAllmain(allmain.filter((x) => x.id !== id));
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen items-center justify-center font-bold">
        <div className="space-y-4 rounded-lg bg-[#f5f3f3] px-24  py-5 shadow-sm">
          <h2 className="text-[20px]">Expense Tracker</h2>
          <div className="space-y-4">
            <div>
              <h3 className="text-lg uppercase">your balance</h3>
              <h3 className="text-xl">{totalincome}$</h3>
            </div>
            <div className="flex space-x-7 bg-white px-8 py-4 text-lg shadow-md">
              <div className="text-center">
                <h3 className="uppercase">income</h3>
                <p>${totalincome}</p>
              </div>
              <div className="w-[1.5px] bg-black"></div>
              <div className="text-center">
                <h3 className="uppercase">expense</h3>
                <p>${totalexpense}</p>
              </div>
            </div>
          </div>
          <div>
            <h3 className="pb-2 text-xl">History</h3>
            <div className="h-[2px] bg-black" />
            <div className="space-y-2 py-2">
              {allmain.map((x) => (
                <div
                  key={x.id}
                  className={`group relative flex justify-between rounded-sm border-r-[3px] ${x.type === "expense" ? "border-r-red-500" : "border-r-green-500"} bg-white px-2 py-3 shadow-md`}
                >
                  <p className="capitalize">{x.text}</p>
                  <p>{x.type === "expense" ? -x.amount : x.amount}$</p>
                  <div className="absolute right-2 top-2  hidden space-x-2 group-hover:block">
                    <IconButton
                      className="!rounded-lg !bg-gray-200"
                      onClick={() => HandleDelete(x.id)}
                    >
                      <Delete fontSize="small" />
                    </IconButton>
                    <IconButton className="!rounded-lg !bg-gray-200">
                      <Edit fontSize="small" />
                    </IconButton>
                  </div>
                </div>
              ))}
            </div>
          </div>
          <div className="space-y-3">
            <div>
              <h3 className="pb-2 text-xl">Add new transaction</h3>
              <div className="h-[2px] bg-black" />
            </div>
            <div className="flex flex-col gap-1">
              <p>Text :</p>
              <input
                type="text"
                id="text"
                placeholder="Enter text..."
                className="h-9 rounded-sm pl-2 outline-none"
                onChange={(e) =>
                  setMain((prev) => ({ ...prev, text: e.target.value }))
                }
                value={main.text}
              />
            </div>
            <div className="flex flex-col gap-1">
              <p>Amount :</p>
              <input
                type="number"
                id="number"
                placeholder="0"
                value={main.amount}
                onChange={(e) =>
                  setMain((prev) => ({
                    ...prev,
                    amount: parseInt(e.target.value),
                  }))
                }
                className="h-9 rounded-sm pl-2 outline-none"
              />
            </div>
            <div className="flex gap-2">
              <div className="flex items-center gap-1">
                <input
                  type="radio"
                  id="expense"
                  value="expense"
                  name="type"
                  checked={main.type === "expense"}
                  onChange={() =>
                    setMain((prev) => ({
                      ...prev,
                      type: "expense",
                    }))
                  }
                />
                <label htmlFor="expense">Expense</label>
              </div>
              <div className="flex items-center gap-1">
                <input
                  type="radio"
                  id="income"
                  value="income"
                  name="type"
                  checked={main.type === "income"}
                  onChange={() =>
                    setMain((prev) => ({
                      ...prev,
                      type: "income",
                    }))
                  }
                />
                <label htmlFor="income">Income</label>
              </div>
            </div>
            <button
              onClick={HandleClick}
              className="w-[280px] rounded-md bg-purple-500 py-2 text-white hover:bg-purple-600"
            >
              Add transaction
            </button>
          </div>
        </div>
      </main>
    </>
  );
}
